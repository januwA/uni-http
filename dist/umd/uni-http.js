!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.uniHttp=t():e.uniHttp=t()}(this,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{UniAbortController:()=>o,UniHttp:()=>m,jsonToSerialize:()=>c,mergeConfig:()=>a,mergeUrl:()=>i,parseUrlParams:()=>l,removeHeaderContentType:()=>n,urlWithParams:()=>p});class r{isCompleted=!1}class s extends r{_res;_rej;promise;constructor(){super(),this.promise=new Promise(((e,t)=>{this._res=e,this._rej=t}))}complete(e){if(this.isCompleted)throw Error("Promise already completed");this._res(e),this.isCompleted=!0}completeError(e){if(this.isCompleted)throw Error("Promise already completed");this._rej(e),this.isCompleted=!0}}class o{completer=new s;abort(){this.completer.isCompleted||this.completer.complete(!0)}}function a(e,t){const r={baseURL:e.baseURL??t.baseURL,url:e.url??t.url,method:e.method??t.method??"GET",data:Object.assign({},t.data,e.data),params:Object.assign({},t.params,e.params),header:Object.assign({},t.header,e.header),filePath:e.filePath??t.filePath,name:e.name??t.name,timeout:e.timeout??t.timeout,dataType:e.dataType??t.dataType,responseType:e.responseType??t.responseType,sslVerify:e.sslVerify??t.sslVerify,withCredentials:e.withCredentials??t.withCredentials,firstIpv4:e.firstIpv4??t.firstIpv4,success:e.success??t.success,fail:e.fail??t.fail,complete:e.complete??t.complete,fileType:e.fileType??t.fileType,file:e.file??t.file,files:e.files??[],abortController:e.abortController??t.abortController,offHeadersReceived:e.offHeadersReceived??t.offHeadersReceived,onHeadersReceived:e.onHeadersReceived??t.onHeadersReceived,onProgressUpdate:e.onProgressUpdate??t.onProgressUpdate,offProgressUpdate:e.offProgressUpdate??t.offProgressUpdate,interceptors:e.interceptors??[]};return t.files&&(r.files=r.files?.concat(t.files)),t.interceptors&&(r.interceptors=r.interceptors?.concat(t.interceptors)),r}function i(e,t=""){const r=t.match(/^https?:\/\//);return r||t.startsWith("/")||(t="/"+t),e?r?t:e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):t}function n(e){return Object.keys(e).forEach((t=>{"content-type"===t.toLowerCase().trim()&&delete e[t]})),e}function c(e){let t="";for(let r in e){let s=e[r],o=Object.prototype.toString.call(s);"[object Array]"===o?s.forEach((e=>t+=`${r}=${e}&`)):t+="[object Object]"===o?`${r}=${JSON.stringify(s)}&`:`${r}=${s}&`}return t.replace(/&$/,"")}function l(e){const t={url:e,params:{}};if(!(e.indexOf("?")>=0))return t;const r=e.split("?");return t.url=r[0],r[1]?(r[1].split("&").map((e=>e.split("="))).forEach((e=>{if(2===e.length){const r=e[0],s=e[1];t.params.hasOwnProperty(r)?(t.params[r]=[t.params[r]],t.params[r].push(s)):t.params[r]=s}})),t):t}function p(e){let t=l(i(e.baseURL,e.url));const r=c(Object.assign({},t.params,e.params));return r?t.url+"?"+r:t.url}const f={errMsg:"request:fail cancel"};function d(e,t){return{[Symbol.asyncIterator]:()=>({i:0,async next(){try{if(this.i<e.length){const r=e[this.i++];return await t(r),{value:r,done:!1}}return{value:null,done:!0}}catch(e){throw e}}})}}function u(e,t){return e?e.filter((e=>t in e&&"function"==typeof e[t])):[]}class m{config;static create(e={}){return new m(e)}constructor(e={}){this.config=e}request(e){return async function(e){const t=new s;let r=!1;try{for await(const t of d(u(e.interceptors,"request"),(t=>t.request?.(e))))if(t&&!0===e.cancel){r=!0,t.fail?.(f,e),t.complete?.(f,e);break}}catch(e){t.completeError(e)}if(r)return t.completeError(f),t.promise;const o=p(e),a=e.filePath||e.file||e.files&&e.files.length,i=async r=>{try{for await(const t of d(u(e.interceptors,"success"),(async t=>r=await t.success(r,e))));e.success?e.success(r):t.complete(r)}catch(e){t.completeError(e)}},c=async r=>{try{for await(const t of d(u(e.interceptors,"fail"),(async t=>t.fail?.(r,e))));e.fail?e.fail(r):t.completeError(r)}catch(e){t.completeError(e)}},l=async r=>{try{for await(const t of d(u(e.interceptors,"complete"),(async t=>t.complete?.(r,e))));e.complete?.(r)}catch(e){t.completeError(e)}};let m;return a?(e.header=n(e.header??{}),m=uni.uploadFile({url:o,files:e.files,fileType:e.fileType,file:e.file,filePath:e.filePath,name:e.name,header:e.header,formData:e.data,success:e=>{let t;try{t=JSON.parse(e.data)}catch(r){t=e.data}const r={statusCode:e.statusCode,header:{},cookies:[],data:t};i(r)},fail:c,complete:l})):m=uni.request({url:o,data:e.data,header:e.header,method:e.method,timeout:e.timeout,dataType:e.dataType,responseType:e.responseType,sslVerify:e.sslVerify,withCredentials:e.withCredentials,firstIpv4:e.firstIpv4,success:i,fail:c,complete:l}),e.abortController?.completer.promise.then((()=>m.abort())),e.onProgressUpdate&&m.onProgressUpdate(e.onProgressUpdate),e.onHeadersReceived&&m.onHeadersReceived(e.onHeadersReceived),e.offProgressUpdate&&m.offProgressUpdate(e.offProgressUpdate),e.offHeadersReceived&&m.offHeadersReceived(e.offHeadersReceived),t.promise}(a(e,this.config))}_request(e,t,r={}){return"string"==typeof t?r.url=t:r=t,r.method=e,this.request(r)}get(e,t){return this._request("GET",e,t)}post(e,t){return this._request("POST",e,t)}put(e,t){return this._request("PUT",e,t)}delete(e,t){return this._request("DELETE",e,t)}options(e,t){return this._request("OPTIONS",e,t)}head(e,t){return this._request("HEAD",e,t)}reace(e,t){return this._request("TRACE",e,t)}connect(e,t){return this._request("CONNECT",e,t)}}return t})()));